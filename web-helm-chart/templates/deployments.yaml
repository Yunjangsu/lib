{{- define "deployment.template" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name }}
  namespace: web
spec:
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      app: {{ .name }}
      key: {{ .key }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .name }}
        key: {{ .key }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: key
                  operator: In
                  values:
                  - {{ .key }}
              topologyKey: topology.kubernetes.io/zone
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              key: {{ .key }}
      containers:
      - image: {{ .image }}
        imagePullPolicy: IfNotPresent
        name: {{ .name }}nginx
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 30
        readinessProbe:
           tcpSocket:
             port: 80
           initialDelaySeconds: 30
           periodSeconds: 10
           timeoutSeconds: 30
        resources:
          requests:
            cpu: 150m
            memory: 150Mi
          limits:
            cpu: 150m
            memory: 150Mi
---
{{- end -}}

{{- template "deployment.template" (dict "name" "loginweb" "replicas" .Values.replicaCounts.loginweb "key" "login" "image" .Values.images.loginweb) -}}
{{- template "deployment.template" (dict "name" "boardweb" "replicas" .Values.replicaCounts.boardweb "key" "board" "image" .Values.images.boardweb) -}}
{{- template "deployment.template" (dict "name" "mainweb" "replicas" .Values.replicaCounts.mainweb "key" "main" "image" .Values.images.mainweb) -}}
{{- template "deployment.template" (dict "name" "memberweb" "replicas" .Values.replicaCounts.memberweb "key" "member" "image" .Values.images.memberweb) -}}